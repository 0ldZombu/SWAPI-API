{"name": "test_generate_allure", "status": "failed", "statusDetails": {"message": "Failed", "trace": "self = <request_page.RequestPage object at 0x0000022FB24958D0>\n\n    def generate_allure(self):\n        \"\"\"Генерация отчёта allure Bat'файлом\n        Требует прерывания через Ctrl+C\"\"\"\n        bat_file_path = r'allure_generator.bat'\n        try:\n>           subprocess.run(bat_file_path, check=True)\n\nrequest_page.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Koska_PC\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\subprocess.py:558: in run\n    stdout, stderr = process.communicate(input, timeout=timeout)\nC:\\Users\\Koska_PC\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\subprocess.py:1213: in communicate\n    self.wait()\nC:\\Users\\Koska_PC\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\subprocess.py:1276: in wait\n    return self._wait(timeout=timeout)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Popen: returncode: 130 args: 'allure_generator.bat'>, timeout = None\n\n    def _wait(self, timeout):\n        \"\"\"Internal implementation of wait() on Windows.\"\"\"\n        if timeout is None:\n            timeout_millis = _winapi.INFINITE\n        elif timeout <= 0:\n            timeout_millis = 0\n        else:\n            timeout_millis = int(timeout * 1000)\n        if self.returncode is None:\n            # API note: Returns immediately if timeout_millis == 0.\n>           result = _winapi.WaitForSingleObject(self._handle,\n                                                 timeout_millis)\nE           KeyboardInterrupt\n\nC:\\Users\\Koska_PC\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\subprocess.py:1602: KeyboardInterrupt\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_swapi.TestSwapi object at 0x0000022FB239BD40>\n\n    @pytest.mark.smoke\n    def test_generate_allure(self):\n        page = RequestPage()\n>       page.generate_allure()\n\ntest_swapi.py:78: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <request_page.RequestPage object at 0x0000022FB24958D0>\n\n    def generate_allure(self):\n        \"\"\"Генерация отчёта allure Bat'файлом\n        Требует прерывания через Ctrl+C\"\"\"\n        bat_file_path = r'allure_generator.bat'\n        try:\n            subprocess.run(bat_file_path, check=True)\n        except BaseException:\n>           return pytest.fail()\nE           Failed\n\nrequest_page.py:20: Failed"}, "start": 1740833668732, "stop": 1740833722609, "uuid": "11b8b756-eb44-4b52-8b69-57dc6c120893", "historyId": "e0214a00d607fecb6413780436f8e4ae", "testCaseId": "e0214a00d607fecb6413780436f8e4ae", "fullName": "test_swapi.TestSwapi#test_generate_allure", "labels": [{"name": "tag", "value": "smoke"}, {"name": "suite", "value": "test_swapi"}, {"name": "subSuite", "value": "TestSwapi"}, {"name": "host", "value": "DESKTOP-N5B7MGS"}, {"name": "thread", "value": "4444-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_swapi"}]}